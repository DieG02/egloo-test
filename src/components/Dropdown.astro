---
import { ChevronDown } from "@lucide/astro";
import "../styles/dropdown.css";

export interface Props {
  label?: string;
  icon?: any;
}

const { 
  label,
  icon: Icon
} = Astro.props;
---

<div class="nav-item dropdown">
  <button class="dropdown-toggle" aria-expanded="false">
    {Icon && <Icon size={18} stroke-width={1} class="icon"/>}
    <span>{label}</span>
    <ChevronDown class="icon chevron" size={16}/>
  </button>

  <ul class="dropdown-menu">
    <li><a href="#">Option 1</a></li>
    <li><a href="#">Option 2</a></li>
    <li><a href="#">Option 3</a></li>
    <li><a href="#">Other</a></li>
  </ul>
</div>

<script>
  document.querySelectorAll('.dropdown-toggle').forEach(button => {
    const li = button.closest('.dropdown') as HTMLLIElement;

    button.addEventListener('click', e => {
      e.stopPropagation();
      const open = li.classList.contains('open');
      document.querySelectorAll('.dropdown.open').forEach(d => d !== li && d.classList.remove('open'));
      li.classList.toggle('open', !open);
      button.setAttribute('aria-expanded', String(!open));
    });
  });

  addEventListener('click', () => {
    document.querySelectorAll('.dropdown.open').forEach(d => d.classList.remove('open'));
    document.querySelectorAll('.dropdown-toggle[aria-expanded="true"]').forEach(b => b.setAttribute('aria-expanded', 'false'));
  });
</script>